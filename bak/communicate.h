/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _COMMUNICATE_H_RPCGEN
#define _COMMUNICATE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct Article_t {
	char text[120];
	int seqnum;
	int reply_seqnum;
};
typedef struct Article_t Article_t;

struct Page_t {
	Article_t articles[10];
};
typedef struct Page_t Page_t;

struct Written_seqnums_t {
	int seqnums[50];
};
typedef struct Written_seqnums_t Written_seqnums_t;

struct write_1_argument {
	Article_t Article;
	int Nr;
	int Nw;
};
typedef struct write_1_argument write_1_argument;

#define COMMUNICATE 0x20000002
#define COMMUNICATE_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define Ping 1
extern  bool_t * ping_1(CLIENT *);
extern  bool_t * ping_1_svc(struct svc_req *);
#define Read 2
extern  Page_t * read_1(int , CLIENT *);
extern  Page_t * read_1_svc(int , struct svc_req *);
#define Get_mode 3
extern  char ** get_mode_1(CLIENT *);
extern  char ** get_mode_1_svc(struct svc_req *);
#define Fetch_articles 4
extern  bool_t * fetch_articles_1(Written_seqnums_t , CLIENT *);
extern  bool_t * fetch_articles_1_svc(Written_seqnums_t , struct svc_req *);
#define Write 5
extern  int * write_1(Article_t , int , int , CLIENT *);
extern  int * write_1_svc(Article_t , int , int , struct svc_req *);
#define Get_seqnum 6
extern  int * get_seqnum_1(CLIENT *);
extern  int * get_seqnum_1_svc(struct svc_req *);
#define Server_write 7
extern  bool_t * server_write_1(Article_t , CLIENT *);
extern  bool_t * server_write_1_svc(Article_t , struct svc_req *);
#define Highest_seqnum 8
extern  int * highest_seqnum_1(CLIENT *);
extern  int * highest_seqnum_1_svc(struct svc_req *);
#define Choose 9
extern  Article_t * choose_1(int , CLIENT *);
extern  Article_t * choose_1_svc(int , struct svc_req *);
extern int communicate_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define Ping 1
extern  bool_t * ping_1();
extern  bool_t * ping_1_svc();
#define Read 2
extern  Page_t * read_1();
extern  Page_t * read_1_svc();
#define Get_mode 3
extern  char ** get_mode_1();
extern  char ** get_mode_1_svc();
#define Fetch_articles 4
extern  bool_t * fetch_articles_1();
extern  bool_t * fetch_articles_1_svc();
#define Write 5
extern  int * write_1();
extern  int * write_1_svc();
#define Get_seqnum 6
extern  int * get_seqnum_1();
extern  int * get_seqnum_1_svc();
#define Server_write 7
extern  bool_t * server_write_1();
extern  bool_t * server_write_1_svc();
#define Highest_seqnum 8
extern  int * highest_seqnum_1();
extern  int * highest_seqnum_1_svc();
#define Choose 9
extern  Article_t * choose_1();
extern  Article_t * choose_1_svc();
extern int communicate_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Article_t (XDR *, Article_t*);
extern  bool_t xdr_Page_t (XDR *, Page_t*);
extern  bool_t xdr_Written_seqnums_t (XDR *, Written_seqnums_t*);
extern  bool_t xdr_write_1_argument (XDR *, write_1_argument*);

#else /* K&R C */
extern bool_t xdr_Article_t ();
extern bool_t xdr_Page_t ();
extern bool_t xdr_Written_seqnums_t ();
extern bool_t xdr_write_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_COMMUNICATE_H_RPCGEN */
